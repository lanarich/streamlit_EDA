import streamlit as st
import pandas as pd
from PIL import Image
import plotly
import plotly.express as px
import plotly.figure_factory as ff
import numpy as np


@st.cache_data
def load_data():
    DATA = 'data.csv'
    data = pd.read_csv(DATA)
    m_1 = {1: '–û—Ç–∫–ª–∏–∫ –±—ã–ª', 0 : '–û—Ç–∫–ª–∏–∫–∞ –Ω–µ –±—ã–ª–æ'}
    m_2 = {1: '–†–∞–±–æ—Ç–∞–µ—Ç', 0 : '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}
    m_3 = {1: '–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä', 0 : '–ù–µ –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä'}
    m_4 = {1: '–ú—É–∂—á–∏–Ω–∞', 0: '–ñ–µ–Ω—â–∏–Ω–∞'}
    m_5 = {1: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ –µ—Å—Ç—å', 0: '–ö–≤–∞—Ä—Ç–∏—Ä—ã –Ω–µ—Ç'}

    data['target'] = data['target'].astype(object).replace(m_1)
    data['socstatus_work_fl'] = data['socstatus_work_fl'].astype(object).replace(m_2)
    data['socstatus_pens_fl'] = data['socstatus_pens_fl'].astype(object).replace(m_3)
    data['gender'] = data['gender'].astype(object).replace(m_4)
    data['fl_presence_fl'] = data['fl_presence_fl'].astype(object).replace(m_5)

    return data



def main():
    image = Image.open('pic1.jpg')

    st.set_page_config(
        layout="wide",
        page_title="Demo EDA",
        page_icon=image,

        )

    st.write(
            """
            # –ß—Ç–æ —Ç–∞–∫–æ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–æ–º?
            –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ EDA –∫ –∫–∞–∫–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –ª—É—á—à–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –¥–ª—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
            """
        )

    st.image(image, width = 1100)

    tab1, tab2, tab3, tab4 = st.tabs(["üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ", "üîç –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è", "ü•ä Target vs Var", "üìê –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"])

    with tab1:
        render_tab1()

    with tab2:
        render_tab2()

    with tab3:
        render_tab3()

    with tab4:
        render_tab4()

def render_tab1():

    st.write(
        """
        ### –í—ã–±–µ—Ä–µ—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        """
    )


    var = st.selectbox("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è", ("–û—Ç–∫–ª–∏–∫ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é", "–í–æ–∑—Ä–∞—Å—Ç",  "–ù–∞–ª–∏—á–∏–µ —Ä–∞–±–æ—Ç—ã", "–ü—Ä–µ–±—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø–µ–Ω—Å–∏–∏",
                                              "–ü–æ–ª", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤", "–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥ (–≤ —Ä—É–±–ª—è—Ö)",
                                              "–ù–∞–ª–∏—á–∏–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏", "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤",
                                             "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤"), label_visibility  = "hidden")

    graph(var)

    st.write(
        """
        #### –í—ã–≤–æ–¥:  
        –ò—Å—Ö–æ–¥—è –∏–∑ –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤—ã–≤–æ–¥, —á—Ç–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: **–í–æ–∑—Ä–∞—Å—Ç**, **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π**, **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤**,
        **–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥ (–≤ —Ä—É–±–ª—è—Ö)**, **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏**, **–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤** –∏ **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤** –∏–º–µ—é—Ç –Ω–µ–Ω–æ—Ä–º–ª–∞—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ.
        –î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ö–æ—Ä–æ—à–µ–π –º–æ–¥–µ–ª–∏ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—Ä–æ–≤–∞—Ç—å —à–∫–∞–ª—ã, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å –Ω–∞–∏–±–æ–ª—å—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏.  
        –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å –≤—ã–±–æ—Ä–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è—é —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –º—É–∂—á–∏–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∏–ª–∏ —Å—Ä–µ–¥–Ω–µ—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –Ω–µ –∏–º–µ—é—Ç –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã.  
        –ò–∑ 15–ö —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤ –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞ —Ç–æ–ª—å–∫–æ ~12% –∫–ª–∏–µ–Ω—Ç–æ–≤.
        """
    )

def graph(var):

    translatetion = {
        "–û—Ç–∫–ª–∏–∫ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é": "target",
        "–í–æ–∑—Ä–∞—Å—Ç": "age",
        "–ù–∞–ª–∏—á–∏–µ —Ä–∞–±–æ—Ç—ã": "socstatus_work_fl",
        "–ü—Ä–µ–±—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø–µ–Ω—Å–∏–∏": "socstatus_pens_fl",
        "–ü–æ–ª": "gender",
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π": "child_total",
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤": "dependants",
        "–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥ (–≤ —Ä—É–±–ª—è—Ö)": "personal_income",
        "–ù–∞–ª–∏—á–∏–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã":"fl_presence_fl",
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏":"own_auto",
        "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ":"education",
        "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤": "loan_num_total",
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤":"loan_num_closed"
    }

    df = load_data()

    int_list = ['age', 'child_total', 'dependants', 'personal_income', 'loan_num_total', 'loan_num_closed', 'own_auto']
    str_list = ['target', 'socstatus_work_fl', 'socstatus_pens_fl', 'gender', 'fl_presence_fl', 'education']

    if translatetion[var] in int_list:
        if translatetion[var] in ['personal_income']:
            fig = px.histogram(df, x=translatetion[var], title=f'–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π: {var}', range_x=(0, 100000))
        else:
            fig = px.histogram(df, x=translatetion[var], title=f'–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π: {var}')
        fig.update_traces(marker_color='skyblue', marker_line_color='black', marker_line_width=1, showlegend=False)
        fig.update_xaxes(title=None)
        fig.update_yaxes(title=None)
        st.plotly_chart(fig, use_container_width=True)
    elif translatetion[var] in str_list:
        fig = px.pie(df, names = translatetion[var],  title=f'–ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π: {var}',
                     color_discrete_sequence=['#A4969B', 'skyblue', 'gray', 'skyblue'])
        fig.update_traces(textinfo='percent+label', pull=[0.05, 0.05, 0.05, 0.05], showlegend=False)
        fig.update_layout(
            height=600,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –≥—Ä–∞—Ñ–∏–∫–∞
            width=700
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –≥—Ä–∞—Ñ–∏–∫–∞
        )
        st.plotly_chart(fig, use_container_width=True)

def render_tab2():

    st.write(
        """
        ### –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        """
    )

    df = load_data()


    df_corr = df.loc[:, ~df.columns.isin(['agreement_rk', 'education', 'target', 'socstatus_work_fl', 'socstatus_pens_fl',
                                          'gender', 'fl_presence_fl', 'work_time'])].corr()
    x = list(df_corr.columns)
    y = list(df_corr.index)
    z = np.array(df_corr)

    new_column_names = ["–í–æ–∑—Ä–∞—Å—Ç", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ<br>–¥–µ—Ç–µ–π", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ<br>–∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤",
                        "–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥<br>(–≤ —Ä—É–±–ª—è—Ö)", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π<br>–≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏",
                        "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ<br> –∫—Ä–µ–¥–∏—Ç–æ–≤", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ<br> –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤"]

    fig = ff.create_annotated_heatmap(
        z,
        x=new_column_names,
        y=new_column_names,
        annotation_text=np.around(z, decimals=2),
        hoverinfo='z',
        colorscale='Viridis'
    )
    fig.update_layout(
        height=600,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –≥—Ä–∞—Ñ–∏–∫–∞
        width=700)



    st.plotly_chart(fig, use_container_width=True)

    st.write(
        """
        #### –í—ã–≤–æ–¥:  
        –ö–∞–∫ –∏ –æ–∂–∏–¥–∞–ª–æ—Å—å –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É –∏–∑—É—á–∞–µ–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ—á–µ–Ω—å –Ω–∏–∑–∫–∞—è, —Ç–∞–∫ –∫–∞–∫ –µ–µ —Å–ª–æ–∂–Ω–æ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç—å –Ω–∞ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–º —É—Ä–æ–≤–Ω–µ.
        –ù–∞–∏–±–æ–ª–µ–µ —Å–∫–æ—Ä—Ä–µ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ (–∏ –ø–æ —Å–º—ã—Å–ª—É —Ç–æ–∂–µ) –æ–∫–∞–∑–∞–ª–∏—Å—å –ø–∞—Ä—ã: **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π** –∏ **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤** = 0.51, –∞ —Ç–∞–∫–∂–µ
        **–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤** –∏ **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤** = 0.86. –ú–µ–∂–¥—É –Ω–∏–º–∏ –ø—Ä–∏—Å—É—Ç—Å–≤—É–µ—Ç —Ç–µ—Å–Ω–∞—è –ª–∏–Ω–µ–π–Ω–∞—è —Å–≤—è–∑—å.
        """
    )

def render_tab3():

    st.write(
        """
        ### –í—ã–±–µ—Ä–µ—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Å–≤—è–∑–∏ —Å —Ü–µ–ª–µ–≤—ã–º –ø—Ä–∏–∑–Ω–∞–∫–æ–º
        """
    )

    var = st.selectbox("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è",
                       ("–í–æ–∑—Ä–∞—Å—Ç", "–ù–∞–ª–∏—á–∏–µ —Ä–∞–±–æ—Ç—ã", "–ü—Ä–µ–±—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø–µ–Ω—Å–∏–∏",
                        "–ü–æ–ª", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤", "–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥ (–≤ —Ä—É–±–ª—è—Ö)",
                        "–ù–∞–ª–∏—á–∏–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏", "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
                        "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤",
                        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤"), label_visibility="hidden")


    translatetion = {
        "–û—Ç–∫–ª–∏–∫ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é": "target",
        "–í–æ–∑—Ä–∞—Å—Ç": "age",
        "–ù–∞–ª–∏—á–∏–µ —Ä–∞–±–æ—Ç—ã": "socstatus_work_fl",
        "–ü—Ä–µ–±—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø–µ–Ω—Å–∏–∏": "socstatus_pens_fl",
        "–ü–æ–ª": "gender",
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π": "child_total",
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤": "dependants",
        "–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥ (–≤ —Ä—É–±–ª—è—Ö)": "personal_income",
        "–ù–∞–ª–∏—á–∏–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã": "fl_presence_fl",
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏": "own_auto",
        "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ": "education",
        "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤": "loan_num_total",
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤": "loan_num_closed"
    }

    df = load_data()

    int_list = ['age', 'child_total', 'dependants', 'personal_income', 'loan_num_total', 'loan_num_closed']
    str_list = ['target', 'socstatus_work_fl', 'socstatus_pens_fl', 'gender', 'fl_presence_fl', 'education', 'own_auto']

    if translatetion[var] in int_list:
        if translatetion[var] in ['personal_income']:
            fig = px.box(df, x='target', y=translatetion[var], points='all', color='target', title=f'–û—Ç–∫–ª–∏–∫ vs {var}', range_y=(0, 100000))
        else:
            fig = px.box(df, x='target', y=translatetion[var], points='all', color='target', title=f'–û—Ç–∫–ª–∏–∫ vs {var}')
    elif translatetion[var] in str_list:
         fig = px.histogram(df, x=translatetion[var], color='target', title=f'–û—Ç–∫–ª–∏–∫ vs {var}')

    fig.update_layout(
        height=600,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –≥—Ä–∞—Ñ–∏–∫–∞
        width=700)
    fig.update_xaxes(title=None)
    fig.update_yaxes(title=None)

    st.plotly_chart(fig, use_container_width=True)


    st.write(
        """
        #### –í—ã–≤–æ–¥:  
        –ü–æ –≥—Ä–∞—Ñ–∏–∫–∞–º –≤–∏–¥–Ω–æ, —á—Ç–æ —Ü–µ–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–≤—è–∑–∞–Ω–∞ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏.  
        * –û—Ç–∫–ª–∏–∫ —Å–æ–≤–µ—Ä—à–∞—é—Ç –±–æ–ª–µ–µ –º–æ–ª–æ–¥—ã–µ –∫–ª–∏–µ–Ω—Ç—ã, –∞ —Ç–∞–∫–∂–µ
        —Ç–µ, –∫—Ç–æ –∏–º–µ—é—Ç —Ä–∞–±–æ—Ç—É.  
        * –ü–µ–Ω—Å–∏–æ–Ω–µ—Ä—ã –Ω–µ —Å–∫–ª–æ–Ω—ã —Å–æ–≤–µ—Ä—à–∞—Ç—å –æ—Ç–∫–ª–∏–∫.  
        * –ú—É–∂—á–∏–Ω—ã —á—É—Ç—å —á–∞—â–µ —Å–æ–≤–µ—Ä—à–∞—é –æ—Ç–∫–ª–∏–∫, –æ–¥–Ω–∞–∫–æ –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫–æ–µ –∂–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–º–µ—é—Ç –∂–µ–Ω—â–∏–Ω—ã.  
        * –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π –∏ –∏–∂–¥–µ–≤–µ–Ω—Ü–æ–≤ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –æ—Ç–∫–ª–∏–∫, –∞ –ª–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥ —Å–∫–æ—Ä–µ–µ –≤–ª–∏—è–µ—Ç.  
        * –û—Ç–∫–ª–∏–∫ —Å–æ—Ä–≤–µ—à–∞—é—Ç –∫–ª–∏–µ–Ω—Ç—ã —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–º –ª–∏—á–Ω—ã–º –¥–æ—Ö–æ–¥–æ–º.  
        * –£ –∫–æ–≥–æ –Ω–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏ –º–∞—à–∏–Ω—ã, —á–∞—â–µ –æ—Ç–∫–ª–∏–∫–∞—é—Ç—Å—è –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, —á–µ–º —Ç–µ, —É –∫–æ–≥–æ –æ–Ω–∏ –µ—Å—Ç—å.  
        * –í—ã—Å–æ–∫–∏–π –æ—Ç–∫–ª–∏–∫ —É —Ç–µ—Ö —Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∏–ª–∏ —Å—Ä–µ–¥–Ω–µ—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ, —Å—Ä–µ–¥–Ω–µ–µ –∏ –≤—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ.  
        * –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –æ—Ç–∫–ª–∏–∫.
        """
    )

def render_tab4():
    translatetion = {
        "target": "–û—Ç–∫–ª–∏–∫ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é",
        "socstatus_work_fl": "–ù–∞–ª–∏—á–∏–µ —Ä–∞–±–æ—Ç—ã",
        "socstatus_pens_fl": "–ü—Ä–µ–±—ã–≤–∞–Ω–∏–µ –Ω–∞ –ø–µ–Ω—Å–∏–∏",
        "gender":"–ü–æ–ª",
        "child_total":"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π",
        "dependants":"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤",
        "personal_income":"–õ–∏—á–Ω—ã–π –¥–æ—Ö–æ–¥ (–≤ —Ä—É–±–ª—è—Ö)",
        "fl_presence_fl":"–ù–∞–ª–∏—á–∏–µ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã",
        "own_auto":"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏",
        "education":"–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
        "loan_num_total":"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤",
        "loan_num_closed":"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤",
        "–í–æ–∑—Ä–∞—Å—Ç": "age"
    }

    df = load_data()
    df_desc_int = df.loc[:, ~df.columns.isin(['work_time', 'agreement_rk'])].describe()
    df_desc_int = df_desc_int.rename(columns=translatetion).style.format("{:.2f}")

    df_desc_str = df.describe(include=[object])
    df_desc_str = df_desc_str.rename(columns=translatetion)

    st.write(
        """
        #### –û–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        """
    )

    st.table(df_desc_int)

    st.write(
        """
        #### –û–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        """
    )

    st.table(df_desc_str)


if __name__ == "__main__":
    main()